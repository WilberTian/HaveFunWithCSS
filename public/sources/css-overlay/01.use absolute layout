<html>
  <head>
    <style>
      html, body{
        min-height: 100%;
      }
      body{
        position: relative;
      }
      .overlay{
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 10;
        background-color: rgba(0,0,0,0.5); /*暗淡的背景*/
      }
    </style>
  </head>
  <body>
    <div class="overlay"></div>
    <pre>
    首先，你需要确保浮层的绝对定位是相对于body。因此，如果浮层包含在另一个div中，而且这个div设置了相对定位，那么叠加定位是相对于其容器，而不是页面的body。所以，你要么让这个覆盖层是body的子元素，或者确保它的所有祖先元素没有设置为relative。

    同进，你需要确保你的页面内容扩展到窗口底部或更多，因为body的扩展以适应其内容的高度(假设内容不是绝对)，如果没有足够的内容来扩大body的高度到窗口的底部。这个时候需要将浮层的高度设置为body高度的100%，不然达不到视窗的底部，也无法覆盖它。

    为了避免这种情况，不提心页面上的内容数量，仍然需要一个和视窗大小的叠加层，你需要设置一个相关于html和body的高度。

    如果你给html元素设置了100%高度(100%高度是相对于视窗高度)，同时给body设置一个100%高度(相对于html元素)，此时两个元素的高度都是相对于视窗的100%，视窗无论有多深的内容，他们的高度仍然沿着内容高度延伸，等同于视窗高度，所以浮层的高度也一样。

    在这种情况下，如果你向下滚动页面，叠加层也将滚动起来，你会看到它下面的内容没有覆盖，也就是说覆盖被切断。

    解决文案是给html元素和body元素设置一个最小高度，在大多数情况下是可取的。通过设置一个最小高度，你会确保他们的高度达到视窗的底部，并随着内容增加而增加。最后，要使浮层的高度增加，让他随内容滚动覆盖整个页面内容，你必须在body上设置一个position:relative，让浮层的高度扩展到body的高度。

    另一件事情要注意，这种技术不需要给z-index设置一个很高的值。当他们位置重叠，或页面上元素在另一个元素之上，很多开发人员倾向于给z-index设置一个非常高的值，如z-index:999999。这是没有必要的。大得多情况之下，给z-index设置值为10,有时甚至更少，就足够让一个元素在其他元素之上。你只需要知道，如果其他元素指定了z-index值，你要将浮层的z-index值设置高于其他元素。

    最后，你还需要记得，在这种技术中，你需要添加一个空的div标记，当然这样是没有语义的。

    使用这种技术的优势是，它支持所有主要的浏览器，和其他老浏览器，到IE8。
    </pre>
  </body>
</html>